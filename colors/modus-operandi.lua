if vim.g.colors_name then
  vim.cmd("hi clear")
else
end
vim.api.nvim_set_var("colors_name", "modus-operandi")
vim.api.nvim_set_option_value("termguicolors", true, {})
vim.api.nvim_set_hl(0, "ColorColumn", {bg = "#c4c4c4", fg = "#c4c4c4"})
vim.api.nvim_set_hl(0, "Conceal", {fg = "#193668"})
vim.api.nvim_set_hl(0, "CurSearch", {link = "IncSearch"})
vim.api.nvim_set_hl(0, "Cursor", {bg = "#000000"})
vim.api.nvim_set_hl(0, "CursorColumn", {bg = "#c4c4c4"})
vim.api.nvim_set_hl(0, "CursorIM", {link = "Cursor"})
vim.api.nvim_set_hl(0, "CursorLine", {})
vim.api.nvim_set_hl(0, "DiffAdd", {bg = "#d8f8e1", fg = "#005000"})
vim.api.nvim_set_hl(0, "DiffChange", {bg = "#ffefbf", fg = "#553d00"})
vim.api.nvim_set_hl(0, "DiffDelete", {bg = "#ffe9e9", fg = "#8f1313"})
vim.api.nvim_set_hl(0, "DiffText", {bg = "#fac090"})
vim.api.nvim_set_hl(0, "Directory", {fg = "#0031a9"})
vim.api.nvim_set_hl(0, "lCursor", {link = "Cursor"})
vim.api.nvim_set_hl(0, "CursorLineFold", {bg = "#f2f2f2", fg = "#005e8b"})
vim.api.nvim_set_hl(0, "CursorLineNr", {bg = "#c4c4c4", bold = true, fg = "#000000"})
vim.api.nvim_set_hl(0, "CursorLineSign", {link = "SignColumn"})
vim.api.nvim_set_hl(0, "EndOfBuffer", {fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "ErrorMsg", {fg = "#7f0000"})
vim.api.nvim_set_hl(0, "FloatBorder", {bg = "#f2f2f2", fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "FloatTitle", {bg = "#f2f2f2", fg = "#595959"})
vim.api.nvim_set_hl(0, "FoldColumn", {bg = "#f2f2f2", fg = "#005e8b"})
vim.api.nvim_set_hl(0, "Folded", {bg = "#e0e0e0", fg = "#595959"})
vim.api.nvim_set_hl(0, "IncSearch", {bg = "#f3d000", fg = "#000000"})
vim.api.nvim_set_hl(0, "LineNr", {bg = "#f2f2f2", fg = "#595959"})
vim.api.nvim_set_hl(0, "LineNrAbove", {bg = "#f2f2f2", fg = "#595959"})
vim.api.nvim_set_hl(0, "LineNrBelow", {bg = "#f2f2f2", fg = "#595959"})
vim.api.nvim_set_hl(0, "MatchParen", {bg = "#5fcfff", fg = "#000000"})
vim.api.nvim_set_hl(0, "ModeMsg", {fg = "#002580"})
vim.api.nvim_set_hl(0, "MoreMsg", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "MsgArea", {fg = "#193668"})
vim.api.nvim_set_hl(0, "NonText", {fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "Normal", {bg = "#ffffff", fg = "#000000"})
vim.api.nvim_set_hl(0, "NormalFloat", {bg = "#f2f2f2", fg = "#000000"})
vim.api.nvim_set_hl(0, "NormalNC", {link = "Normal"})
vim.api.nvim_set_hl(0, "Pmenu", {bg = "#f2f2f2", fg = "#000000"})
vim.api.nvim_set_hl(0, "PmenuSbar", {bg = "#e0e0e0"})
vim.api.nvim_set_hl(0, "PmenuSel", {bg = "#c0deff", bold = true})
vim.api.nvim_set_hl(0, "PmenuThumb", {bg = "#193668"})
vim.api.nvim_set_hl(0, "Question", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "QuickFixLine", {bg = "#c0deff", bold = true})
vim.api.nvim_set_hl(0, "Search", {bg = "#a4d5f9", fg = "#000000"})
vim.api.nvim_set_hl(0, "SignColumn", {bg = "#f2f2f2"})
vim.api.nvim_set_hl(0, "SnippetTabstop", {bg = "#b2e4dc", fg = "#000000"})
vim.api.nvim_set_hl(0, "SpecialKey", {fg = "#3548cf"})
vim.api.nvim_set_hl(0, "SpellBad", {sp = "#d00000", undercurl = true})
vim.api.nvim_set_hl(0, "SpellCap", {sp = "#808000", undercurl = true})
vim.api.nvim_set_hl(0, "SpellLocal", {sp = "#008899", undercurl = true})
vim.api.nvim_set_hl(0, "SpellRare", {sp = "#008899", undercurl = true})
vim.api.nvim_set_hl(0, "StatusLine", {bg = "#c8c8c8", fg = "#000000"})
vim.api.nvim_set_hl(0, "StatusLineNC", {bg = "#e6e6e6", fg = "#585858"})
vim.api.nvim_set_hl(0, "Substitute", {bg = "#ff8f88", fg = "#000000"})
vim.api.nvim_set_hl(0, "TabLine", {bg = "#c2c2c2"})
vim.api.nvim_set_hl(0, "TabLineFill", {bg = "#dfdfdf"})
vim.api.nvim_set_hl(0, "TabLineSel", {bg = "#ffffff", bold = true})
vim.api.nvim_set_hl(0, "TermCursor", {link = "Cursor"})
vim.api.nvim_set_hl(0, "TermCursorNC", {link = "Cursor"})
vim.api.nvim_set_hl(0, "Title", {fg = "#000000"})
vim.api.nvim_set_hl(0, "Visual", {bg = "#bdbdbd", fg = "#000000"})
vim.api.nvim_set_hl(0, "VisualNOS", {bg = "#bdbdbd", fg = "#000000"})
vim.api.nvim_set_hl(0, "WarningMsg", {fg = "#5f0070"})
vim.api.nvim_set_hl(0, "Whitespace", {fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "WildMenu", {fg = "#0031a9"})
vim.api.nvim_set_hl(0, "WinBar", {link = "StatusLine"})
vim.api.nvim_set_hl(0, "WinBarNC", {link = "StatusLineNC"})
vim.api.nvim_set_hl(0, "WinSeparator", {bg = "#f2f2f2", fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "Boolean", {fg = "#0000b0"})
vim.api.nvim_set_hl(0, "Character", {fg = "#3548cf"})
vim.api.nvim_set_hl(0, "Comment", {fg = "#595959"})
vim.api.nvim_set_hl(0, "Conditional", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Constant", {fg = "#0000b0"})
vim.api.nvim_set_hl(0, "Debug", {fg = "#0000b0"})
vim.api.nvim_set_hl(0, "Define", {fg = "#a0132f"})
vim.api.nvim_set_hl(0, "Delimiter", {fg = "#000000"})
vim.api.nvim_set_hl(0, "Error", {fg = "#a60000"})
vim.api.nvim_set_hl(0, "Exception", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Float", {fg = "#000000"})
vim.api.nvim_set_hl(0, "Function", {fg = "#721045"})
vim.api.nvim_set_hl(0, "Identifier", {fg = "#005e8b"})
vim.api.nvim_set_hl(0, "Include", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Keyword", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Label", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Macro", {fg = "#a0132f"})
vim.api.nvim_set_hl(0, "Number", {fg = "#000000"})
vim.api.nvim_set_hl(0, "Operator", {fg = "#000000"})
vim.api.nvim_set_hl(0, "PreCondit", {fg = "#a0132f"})
vim.api.nvim_set_hl(0, "PreProc", {fg = "#a0132f"})
vim.api.nvim_set_hl(0, "Repeat", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Special", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "SpecialChar", {fg = "#721045"})
vim.api.nvim_set_hl(0, "SpecialComment", {fg = "#00663f"})
vim.api.nvim_set_hl(0, "Statement", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "StorageClass", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "String", {fg = "#3548cf"})
vim.api.nvim_set_hl(0, "Structure", {fg = "#531ab6"})
vim.api.nvim_set_hl(0, "Tag", {fg = "#721045"})
vim.api.nvim_set_hl(0, "Todo", {fg = "#3548cf"})
vim.api.nvim_set_hl(0, "Type", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "Typedef", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "Underlined", {underline = true})
vim.api.nvim_set_hl(0, "Added", {fg = "#006700"})
vim.api.nvim_set_hl(0, "Changed", {fg = "#655000"})
vim.api.nvim_set_hl(0, "Removed", {fg = "#aa2222"})
vim.api.nvim_set_hl(0, "@attribute", {link = "PreProc"})
vim.api.nvim_set_hl(0, "@attribute.builtin", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@boolean", {link = "Boolean"})
vim.api.nvim_set_hl(0, "@character", {link = "Character"})
vim.api.nvim_set_hl(0, "@character.special", {link = "SpecialChar"})
vim.api.nvim_set_hl(0, "@comment", {link = "Comment"})
vim.api.nvim_set_hl(0, "@comment.documentation", {link = "@comment"})
vim.api.nvim_set_hl(0, "@comment.error", {})
vim.api.nvim_set_hl(0, "@comment.note", {})
vim.api.nvim_set_hl(0, "@comment.todo", {})
vim.api.nvim_set_hl(0, "@comment.warning", {})
vim.api.nvim_set_hl(0, "@constant", {link = "Constant"})
vim.api.nvim_set_hl(0, "@constant.builtin", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@constant.macro", {link = "Define"})
vim.api.nvim_set_hl(0, "@constructor", {fg = "#000000"})
vim.api.nvim_set_hl(0, "@diff.delta", {link = "DiffChange"})
vim.api.nvim_set_hl(0, "@diff.minus", {link = "DiffDelete"})
vim.api.nvim_set_hl(0, "@diff.plus", {link = "DiffAdd"})
vim.api.nvim_set_hl(0, "@function", {link = "Function"})
vim.api.nvim_set_hl(0, "@function.builtin", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@function.call", {link = "@function"})
vim.api.nvim_set_hl(0, "@function.macro", {link = "Macro"})
vim.api.nvim_set_hl(0, "@function.method", {link = "Function"})
vim.api.nvim_set_hl(0, "@function.method.call", {link = "@function.method"})
vim.api.nvim_set_hl(0, "@keyword", {link = "Keyword"})
vim.api.nvim_set_hl(0, "@keyword.conditional", {link = "Conditional"})
vim.api.nvim_set_hl(0, "@keyword.conditional.ternary", {link = "@keyword.conditional"})
vim.api.nvim_set_hl(0, "@keyword.coroutine", {link = "@keyword"})
vim.api.nvim_set_hl(0, "@keyword.debug", {link = "Debug"})
vim.api.nvim_set_hl(0, "@keyword.directive", {link = "PreProc"})
vim.api.nvim_set_hl(0, "@keyword.directive.define", {link = "Define"})
vim.api.nvim_set_hl(0, "@keyword.exception", {link = "Exception"})
vim.api.nvim_set_hl(0, "@keyword.function", {link = "@keyword"})
vim.api.nvim_set_hl(0, "@keyword.import", {link = "Include"})
vim.api.nvim_set_hl(0, "@keyword.modifier", {})
vim.api.nvim_set_hl(0, "@keyword.operator", {link = "@operator"})
vim.api.nvim_set_hl(0, "@keyword.repeat", {link = "Repeat"})
vim.api.nvim_set_hl(0, "@keyword.return", {link = "@keyword"})
vim.api.nvim_set_hl(0, "@keyword.type", {link = "@type"})
vim.api.nvim_set_hl(0, "@label", {fg = "#193668"})
vim.api.nvim_set_hl(0, "@markup.heading", {bold = true, fg = "#005f5f"})
vim.api.nvim_set_hl(0, "@markup.heading.1", {bold = true, fg = "#000000"})
vim.api.nvim_set_hl(0, "@markup.heading.2", {bold = true, fg = "#624416"})
vim.api.nvim_set_hl(0, "@markup.heading.3", {bold = true, fg = "#193668"})
vim.api.nvim_set_hl(0, "@markup.heading.4", {bold = true, fg = "#721045"})
vim.api.nvim_set_hl(0, "@markup.heading.5", {bold = true, fg = "#2a5045"})
vim.api.nvim_set_hl(0, "@markup.heading.6", {bold = true, fg = "#7f0000"})
vim.api.nvim_set_hl(0, "@markup.italic", {italic = true})
vim.api.nvim_set_hl(0, "@markup.link", {fg = "#595959"})
vim.api.nvim_set_hl(0, "@markup.link.label", {fg = "#3548cf", underline = true})
vim.api.nvim_set_hl(0, "@markup.link.url", {fg = "#193668"})
vim.api.nvim_set_hl(0, "@markup.list", {})
vim.api.nvim_set_hl(0, "@markup.list.checked", {})
vim.api.nvim_set_hl(0, "@markup.list.unchecked", {})
vim.api.nvim_set_hl(0, "@markup.math", {link = "Special"})
vim.api.nvim_set_hl(0, "@markup.quote", {fg = "#2a5045"})
vim.api.nvim_set_hl(0, "@markup.raw", {link = "String"})
vim.api.nvim_set_hl(0, "@markup.raw.block", {bg = "#f2f2f2"})
vim.api.nvim_set_hl(0, "@markup.raw.markdown_inline", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "@markup.strikethrough", {strikethrough = true})
vim.api.nvim_set_hl(0, "@markup.strong", {bold = true})
vim.api.nvim_set_hl(0, "@markup.underline", {underline = true})
vim.api.nvim_set_hl(0, "@module", {link = "Include"})
vim.api.nvim_set_hl(0, "@module.builtin", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@number", {link = "Number"})
vim.api.nvim_set_hl(0, "@number.float", {link = "Float"})
vim.api.nvim_set_hl(0, "@operator", {link = "Operator"})
vim.api.nvim_set_hl(0, "@property", {fg = "#005e8b"})
vim.api.nvim_set_hl(0, "@punctuation.bracket", {fg = "#000000"})
vim.api.nvim_set_hl(0, "@punctuation.delimiter", {link = "Delimiter"})
vim.api.nvim_set_hl(0, "@punctuation.special", {fg = "#000000"})
vim.api.nvim_set_hl(0, "@string", {link = "String"})
vim.api.nvim_set_hl(0, "@string.documentation", {fg = "#2a5045"})
vim.api.nvim_set_hl(0, "@string.escape", {link = "@string"})
vim.api.nvim_set_hl(0, "@string.regexp", {link = "@string"})
vim.api.nvim_set_hl(0, "@string.special", {link = "Special"})
vim.api.nvim_set_hl(0, "@string.special.path", {link = "Special"})
vim.api.nvim_set_hl(0, "@string.special.symbol", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@string.special.url", {fg = "#193668"})
vim.api.nvim_set_hl(0, "@tag", {link = "@function"})
vim.api.nvim_set_hl(0, "@tag.attribute", {link = "@constant"})
vim.api.nvim_set_hl(0, "@tag.builtin", {link = "@tag"})
vim.api.nvim_set_hl(0, "@tag.delimiter", {link = "Delimiter"})
vim.api.nvim_set_hl(0, "@type", {link = "Type"})
vim.api.nvim_set_hl(0, "@type.builtin", {link = "@type"})
vim.api.nvim_set_hl(0, "@type.definition", {link = "TypeDef"})
vim.api.nvim_set_hl(0, "@variable", {fg = "#005e8b"})
vim.api.nvim_set_hl(0, "@variable.builtin", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@variable.member", {link = "Type"})
vim.api.nvim_set_hl(0, "@variable.parameter", {link = "@variable"})
vim.api.nvim_set_hl(0, "@variable.parameter.builtin", {fg = "#8f0075"})
vim.api.nvim_set_hl(0, "@lsp.type.boolean", {link = "@boolean"})
vim.api.nvim_set_hl(0, "@lsp.type.builtinType", {link = "@type.builtin"})
vim.api.nvim_set_hl(0, "@lsp.type.comment", {link = "@comment"})
vim.api.nvim_set_hl(0, "@lsp.type.decorator", {link = "@attribute"})
vim.api.nvim_set_hl(0, "@lsp.type.deriveHelper", {link = "@attribute"})
vim.api.nvim_set_hl(0, "@lsp.type.enum", {link = "@type"})
vim.api.nvim_set_hl(0, "@lsp.type.enumMember", {link = "@constant"})
vim.api.nvim_set_hl(0, "@lsp.type.escapeSequence", {link = "@string.escape"})
vim.api.nvim_set_hl(0, "@lsp.type.formatSpecifier", {link = "@markup.list"})
vim.api.nvim_set_hl(0, "@lsp.type.generic", {link = "@variable"})
vim.api.nvim_set_hl(0, "@lsp.type.interface", {link = "@keyword"})
vim.api.nvim_set_hl(0, "@lsp.type.keyword", {link = "@keyword"})
vim.api.nvim_set_hl(0, "@lsp.type.lifetime", {link = "@keyword.storage"})
vim.api.nvim_set_hl(0, "@lsp.type.namespace", {link = "@module"})
vim.api.nvim_set_hl(0, "@lsp.type.number", {link = "@number"})
vim.api.nvim_set_hl(0, "@lsp.type.operator", {link = "@operator"})
vim.api.nvim_set_hl(0, "@lsp.type.parameter", {link = "@variable.parameter"})
vim.api.nvim_set_hl(0, "@lsp.type.property", {link = "@property"})
vim.api.nvim_set_hl(0, "@lsp.type.selfKeyword", {link = "@variable.builtin"})
vim.api.nvim_set_hl(0, "@lsp.type.selfTypeKeyword", {link = "@variable.builtin"})
vim.api.nvim_set_hl(0, "@lsp.type.string", {link = "@string"})
vim.api.nvim_set_hl(0, "@lsp.type.typeAlias", {link = "@type.definition"})
vim.api.nvim_set_hl(0, "@lsp.type.unresolvedReference", {sp = "#a60000", undercurl = true})
vim.api.nvim_set_hl(0, "@lsp.type.variable", {link = "@variable"})
vim.api.nvim_set_hl(0, "@lsp.typemod.class.defaultLibrary", {link = "@type.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.enum.defaultLibrary", {link = "@type.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.enumMember.defaultLibrary", {link = "@constant.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.function.defaultLibrary", {link = "@function.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.keyword.async", {link = "@keyword.coroutine"})
vim.api.nvim_set_hl(0, "@lsp.typemod.keyword.injected", {link = "@keyword"})
vim.api.nvim_set_hl(0, "@lsp.typemod.macro.defaultLibrary", {link = "@function.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.method.defaultLibrary", {link = "@function.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.operator.injected", {link = "@operator"})
vim.api.nvim_set_hl(0, "@lsp.typemod.string.injected", {link = "@string"})
vim.api.nvim_set_hl(0, "@lsp.typemod.struct.defaultLibrary", {link = "@type.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.type.defaultLibrary", {link = "@type"})
vim.api.nvim_set_hl(0, "@lsp.typemod.typeAlias.defaultLibrary", {link = "@type"})
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.callable", {link = "@function"})
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.defaultLibrary", {link = "@variable.builtin"})
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.injected", {link = "@variable"})
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.static", {link = "@constant"})
vim.api.nvim_set_hl(0, "DiagnosticError", {fg = "#a60000"})
vim.api.nvim_set_hl(0, "DiagnosticHint", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "DiagnosticInfo", {fg = "#005f5f"})
vim.api.nvim_set_hl(0, "DiagnosticWarn", {fg = "#884900"})
vim.api.nvim_set_hl(0, "DiagnosticUnnecessary", {fg = "#595959"})
vim.api.nvim_set_hl(0, "DiagnosticSignError", {bg = "#f2f2f2", fg = "#a60000"})
vim.api.nvim_set_hl(0, "DiagnosticSignHint", {bg = "#f2f2f2", fg = "#005f5f"})
vim.api.nvim_set_hl(0, "DiagnosticSignInfo", {bg = "#f2f2f2", fg = "#005f5f"})
vim.api.nvim_set_hl(0, "DiagnosticSignWarn", {bg = "#f2f2f2", fg = "#884900"})
vim.api.nvim_set_hl(0, "DiagnosticLineError", {bg = "#ffe8e8"})
vim.api.nvim_set_hl(0, "DiagnosticLineHint", {bg = "#e0f2fa"})
vim.api.nvim_set_hl(0, "DiagnosticLineInfo", {bg = "#e0f2fa"})
vim.api.nvim_set_hl(0, "DiagnosticLineWarn", {bg = "#f8f0d0"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextError", {bg = "#ffe8e8", fg = "#a60000"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextHint", {bg = "#e0f2fa", fg = "#005f5f"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextInfo", {bg = "#e0f2fa", fg = "#005f5f"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextWarn", {bg = "#f8f0d0", fg = "#884900"})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineError", {sp = "#d00000", undercurl = true})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineHint", {sp = "#008899", undercurl = true})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineInfo", {sp = "#008899", undercurl = true})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarn", {sp = "#808000", undercurl = true})
vim.api.nvim_set_hl(0, "BlinkCmpMenu", {bg = "#f2f2f2", fg = "#000000"})
vim.api.nvim_set_hl(0, "BlinkCmpMenuBorder", {bg = "#f2f2f2", fg = "#c4c4c4"})
vim.api.nvim_set_hl(0, "BlinkCmpMenuSelection", {bg = "#c0deff", bold = true})
vim.api.nvim_set_hl(0, "BlinkCmpScrollBarThumb", {bg = "#193668"})
vim.api.nvim_set_hl(0, "BlinkCmpScrollBarGutter", {bg = "#e0e0e0"})
vim.api.nvim_set_hl(0, "BlinkCmpLabel", {fg = "#000000"})
vim.api.nvim_set_hl(0, "BlinkCmpLabelDeprecated", {fg = "#193668", strikethrough = true})
vim.api.nvim_set_hl(0, "BlinkCmpLabelMatch", {bold = true, fg = "#0031a9"})
vim.api.nvim_set_hl(0, "BlinkCmpLabelDetail", {fg = "#193668"})
vim.api.nvim_set_hl(0, "BlinkCmpLabelDescription", {fg = "#193668"})
vim.api.nvim_set_hl(0, "BlinkCmpKind", {fg = "#000000"})
vim.api.nvim_set_hl(0, "BlinkCmpSource", {fg = "#595959"})
vim.api.nvim_set_hl(0, "BlinkCmpGhostText", {fg = "#595959"})
vim.api.nvim_set_hl(0, "BlinkCmpDoc", {bg = "#f2f2f2", fg = "#000000"})
vim.api.nvim_set_hl(0, "BlinkCmpDocBorder", {bg = "#f2f2f2", fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "BlinkCmpDocSeparator", {bg = "#f2f2f2", fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "BlinkCmpDocCursorLine", {bg = "#dae5ec"})
vim.api.nvim_set_hl(0, "BlinkCmpSignatureHelp", {bg = "#f2f2f2", fg = "#000000"})
vim.api.nvim_set_hl(0, "BlinkCmpSignatureHelpBorder", {bg = "#f2f2f2", fg = "#9f9f9f"})
vim.api.nvim_set_hl(0, "BlinkCmpSignatureHelpActiveParameter", {bg = "#f8f0d0", fg = "#884900"})
do
  local kinds_1_auto = {Array = "@punctuation.bracket", Boolean = "@boolean", Class = "@type", Color = "Special", Constant = "@constant", Constructor = "@constructor", Enum = "@lsp.type.enum", EnumMember = "@lsp.type.enumMember", Event = "Special", Field = "@variable.member", File = "Normal", Folder = "Directory", Function = "@function", Interface = "@lsp.type.interface", Key = "@variable.member", Keyword = "@lsp.type.keyword", Method = "@function.method", Module = "@module", Namespace = "@module", Null = "@constant.builtin", Number = "@number", Object = "@constant", Operator = "@operator", Package = "@module", Property = "@property", Reference = "@markup.link", Snippet = "Conceal", String = "@string", Struct = "@lsp.type.struct", Text = "@markup", TypeParameter = "@lsp.type.typeParameter", Unit = "@lsp.type.struct", Value = "@string", Variable = "@variable"}
  for kind_2_auto, hl_3_auto in pairs(kinds_1_auto) do
    vim.api.nvim_set_hl(0, ("BlinkCmpKind" .. kind_2_auto), {link = hl_3_auto})
  end
end
vim.api.nvim_set_hl(0, "LeapMatch", {link = "IncSearch"})
vim.api.nvim_set_hl(0, "LeapLabel", {bg = "#7feaff", bold = true, fg = "#000000"})
vim.api.nvim_set_hl(0, "LeapBackdrop", {})
vim.api.nvim_set_hl(0, "SnacksPicker", {bg = "#ffffff"})
vim.api.nvim_set_hl(0, "SnacksPickerBorder", {bg = "#ffffff", fg = "#595959"})
vim.api.nvim_set_hl(0, "SnacksPickerDir", {fg = "#000000"})
vim.api.nvim_set_hl(0, "SnacksPickerListCursorLine", {bg = "#c0deff", bold = true})
vim.api.nvim_set_hl(0, "SnacksPickerMatch", {bold = true, fg = "#0031a9"})
vim.api.nvim_set_hl(0, "SnacksPickerTitle", {bg = "#ffffff", fg = "#595959"})
vim.api.nvim_set_hl(0, "SnacksPickerTotals", {bg = "NONE", fg = "#005f5f"})
vim.api.nvim_set_hl(0, "MiniCursorword", {bg = "#b2e4dc", fg = "#000000"})
vim.api.nvim_set_hl(0, "MiniCursorwordCurrent", {bg = "#b2e4dc", fg = "#000000"})
vim.api.nvim_set_hl(0, "MiniDiffSignAdd", {bg = "#6cc06c", fg = "#005000"})
vim.api.nvim_set_hl(0, "MiniDiffSignChange", {bg = "#d7c20a", fg = "#553d00"})
vim.api.nvim_set_hl(0, "MiniDiffSignDelete", {bg = "#d84a4f", fg = "#8f1313"})
vim.api.nvim_set_hl(0, "MiniIndentscopeSymbol", {fg = "#c4c4c4"})
vim.api.nvim_set_hl(0, "MiniSnippetsCurrent", {bg = "#b2e4dc", fg = "#000000"})
vim.api.nvim_set_hl(0, "MiniSnippetsCurrentReplace", {bg = "#b2e4dc", fg = "#000000"})
vim.api.nvim_set_hl(0, "MiniSnippetsFinal", {sp = "#ffffff"})
vim.api.nvim_set_hl(0, "MiniSnippetsUnvisited", {sp = "#ffffff"})
vim.api.nvim_set_hl(0, "MiniSnippetsVisited", {sp = "#ffffff"})
return vim.api.nvim_set_hl(0, "MiniTrailspace", {bg = "#ff8f88"})
